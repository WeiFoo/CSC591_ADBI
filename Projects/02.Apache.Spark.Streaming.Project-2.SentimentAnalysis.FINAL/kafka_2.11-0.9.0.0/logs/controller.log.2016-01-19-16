[2016-01-19 16:30:49,518] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2016-01-19 16:31:50,382] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-01-19 16:31:50,409] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-01-19 16:31:50,414] INFO [Controller 0]: Initialized controller epoch to 3 and zk version 2 (kafka.controller.KafkaController)
[2016-01-19 16:31:50,429] INFO [Controller 0]: Controller 0 incremented epoch to 4 (kafka.controller.KafkaController)
[2016-01-19 16:31:50,430] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-01-19 16:31:50,475] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-01-19 16:31:50,476] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-01-19 16:31:50,476] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-01-19 16:31:50,479] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-01-19 16:31:50,480] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-01-19 16:31:50,481] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-01-19 16:31:50,484] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-01-19 16:31:50,485] INFO [Controller 0]: List of topics ineligible for deletion: twitterstream (kafka.controller.KafkaController)
[2016-01-19 16:31:50,488] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-19 16:31:50,488] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-19 16:31:50,489] INFO [Controller 0]: Current list of topics in the cluster: Set(twitterstream) (kafka.controller.KafkaController)
[2016-01-19 16:31:50,504] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=twitterstream,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-01-19 16:31:50,520] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitterstream,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-19 16:31:50,529] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([twitterstream,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-01-19 16:31:50,532] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2016-01-19 16:31:50,533] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-01-19 16:31:50,534] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-01-19 16:31:50,542] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-01-19 16:31:50,543] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-01-19 16:31:50,622] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-19 16:31:50,651] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-19 16:31:50,652] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-01-19 16:31:50,664] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-01-19 16:31:50,664] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-01-19 16:31:50,689] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-01-19 16:31:50,694] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to Node(0, 10.139.65.232, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-01-19 16:31:50,712] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitterstream,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-19 16:31:50,713] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [twitterstream,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-19 16:31:50,720] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-01-19 16:31:55,548] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:31:55,550] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:31:55,551] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:31:55,552] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-19 16:36:55,539] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:36:55,539] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:36:55,539] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:36:55,539] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-19 16:41:55,533] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:41:55,533] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:41:55,533] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:41:55,533] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-19 16:46:55,525] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:46:55,540] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:46:55,540] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:46:55,540] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-19 16:51:55,520] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:51:55,520] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:51:55,520] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:51:55,520] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-19 16:56:55,513] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-19 16:56:55,520] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-19 16:56:55,520] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-19 16:56:55,520] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
